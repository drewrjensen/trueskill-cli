name: Build

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'  # e.g. v1.0.0 or v2.3.4
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller --onefile --add-data "schemas.sql;." src/main.py --name trueskill-cli
          else
            pyinstaller --onefile --add-data "schemas.sql:." src/main.py --name trueskill-cli
          fi

      - name: Rename output
        run: |
          mkdir -p output
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp dist/trueskill-cli.exe output/trueskill-cli.exe
          else
            cp dist/trueskill-cli output/trueskill-cli
          fi

      - name: Upload GitHub Release (main builds only)
        if: startsWith(github.ref, 'refs/tags/v') && github.ref_name != '' && github.event_name == 'push' && github.ref_protected == 'true'
        uses: softprops/action-gh-release@v1
        with:
          files: output/*
          prerelease: ${{ github.ref != 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact (for CI or PRs)
        if: github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: trueskill-cli-${{ matrix.os }}
          path: output/

      - name: Build and push Docker image
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') || github.event_name == 'pull_request'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
          tags: |
            ${{ github.repository }}:${{ github.event.head_commit.message }}

      - name: Clean build folders
        run: |
          rm -rf build __pycache__ *.spec venv dist output